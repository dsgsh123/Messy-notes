1. JVM可能使用TLAB来保证多线程下新对象内存分配的正确性，及每个线程在堆上有属于自己的一块TLAB（本地线程分配缓冲），每个线程进行对象创建时，都会先在TLAB上进行分配，只有TLAB不足时，才会进行TLAB的扩充，一定程度上避免了高并发下多线程对象分配内存的冲突的存在，可以使用 -XX:+/-UserTLAB参数来设定TLAB的开启。

2. 对象在堆中包含三部分，对象头，实例数据以及对齐填充，其中对象头（大小为8字节的倍数，一般为一倍或者两倍）又分为用于存储自身运行时数据（如哈希吗、GC分代年龄、锁状态标志等）和用于指向自身类元数据的类型指针，实例数据存储程序中定义的各种类型的字段内容，是真正存储的有效信息，而对齐填充就是占位符，不一定存在，HotSpot VM要求对象起始地址必须是8字节的倍数，因此需要对齐填充来占位达到8字节的倍数。

3. 内存泄露指无用对象无法释放导致的内存不足，内存溢出指申请的内存大于剩余内存导致的OOM

4. 