1. 首先可以参考这个博主的https://blog.csdn.net/c289054531/article/details/9196149，搞清Spring中DispacherServlet、WebApplicationContext、ServletContext的关系，由此可以知道，springMVC主要处理controller，因此controller的扫描和代理应该在springMVC的配置文件中配置，而其他公用的如dao、service等则应该放在spring的配置文件中，作为父上下文被其他servlet共用（每个servlet都有自己的bean空间+父空间中的bean，自己的bean空间相互之间不共同），在这个基础上，看我想在service上进行aop的拦截，之前把service包、aop包以及aspectj开启都配置在了springmvc的配置文件中，但是之前的事务（针对于service）是在spring的配置文件中配置的，而spring和springmvc的配置文件加载是不同步的，当springmvc中已经配置了service包的扫描，在spring配置文件中对于service配置的事务拦截就会失效，原因在于我在spring和springmvc中都配置了service的包扫描，但是事务拦截是配置在spring的配置文件中的，当springmvc的包扫描已经扫描了service包后，spring在进行扫描service包时，由于service的bean已经被加载，就不会再创建他们的代理对象，所以导致spring事务无法生成代理对象，自然事务也就失效了。

所以应该把aop代理（针对service）和service包以及aop包拉出来放在spring的配置文件中

以上是个人理解，不知道对不对