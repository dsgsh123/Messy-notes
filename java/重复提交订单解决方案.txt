1. 限制某个时间内的最大操作次数只需要有一个计数器就可以，计数器可以用redis实现，设置一个带有有效时间的值作为计数器，如果值不存在则自动创建，超过某一个值就认为操作次数用完即可以实现。
2. 可以使用token机制，token即令牌，我们可以在页面上生成一个token，当提交订单时，根据该token的有效时间和允许的使用次数来判断订单是否允许提交，从而规避重复提交的问题。当然，有人会问，在高并发的情况下，如果是判断token有效之前有很多同一个用户的提交线程过来（用户正常使用一般不会出现这种情况，一般是压力测试工具导致的），那么还是会重复提交，
所以，这里需要用到锁机制，访问同一个用户的token同一时间只能有一个线程，token使用之后失效了就会被清掉，之后的线程就找不到该token，
从而认为订单不能提交。（可以考虑使用redis缓存替代session，满足集群和分布式）
